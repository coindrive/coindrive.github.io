function MetrikaPrototype(){var e=this;e.fireEvent=function(e){console.warn("["+e+"] You should provide counter id to use Yandex metrika events")}}function Metrika(){function e(){if(!counterConfig.id)return void console.warn("You should provide counter id to use Yandex metrika counter");var e="yandex_metrika_callbacks";window[e]=window[e]||[],window[e].push(function(){try{window[n.counterName]=new Ya.Metrika(counterConfig)}catch(e){}});var t=document.getElementsByTagName("script")[0],r=document.createElement("script"),o=function(){t.parentNode.insertBefore(r,t)};return r.type="text/javascript",r.async=!0,r.src="https://mc.yandex.ru/metrika/watch.js","[object Opera]"==window.opera?document.addEventListener("DOMContentLoaded",o,!1):o(),e}function t(e){window[n.counterName]&&window[n.counterName].reachGoal?window[n.counterName].reachGoal(e):console.warn("Event with type ["+e+"] can't be fired because counter is still loading")}var n=this;n.counterName="yaCounter"+counterConfig.id,n.$insertMetrika=e,counterConfig.id&&(n.fireEvent=t)}function MetrikaProvider(){return{configureCounter:function(e){angular.extend(counterConfig,e)},$get:function(){return new Metrika}}}var counterConfig={clickmap:!0,trackLinks:!0,accurateTrackBounce:!0,webvisor:!1,trackHash:!0,ut:"noindex"};Metrika.prototype=MetrikaPrototype;var module=angular.module("yandex-metrika",[]);module.provider("$metrika",MetrikaProvider),module.run(["$metrika",function(e){e.$insertMetrika()}]);